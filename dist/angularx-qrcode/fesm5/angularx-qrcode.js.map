{"version":3,"file":"angularx-qrcode.js","sources":["ng://angularx-qrcode/lib/angularx-qrcode.component.ts","ng://angularx-qrcode/lib/angularx-qrcode.module.ts","ng://angularx-qrcode/public-api.ts","ng://angularx-qrcode/angularx-qrcode.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  PLATFORM_ID,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport * as QRCode from 'qrcode';\nimport { QRCodeErrorCorrectionLevel, QRCodeVersion, QRCodeElementType } from './types';\n\n@Component({\n  selector: 'qrcode',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<div #qrcElement [class]=\"cssClass\"></div>`,\n})\nexport class QRCodeComponent implements OnChanges, AfterViewInit {\n\n  // Deprecated\n  @Input() public colordark: string = '';\n  @Input() public colorlight: string = '';\n  @Input() public level: string = '';\n  @Input() public hidetitle: boolean = false;\n  @Input() public size: number = 0;\n  @Input() public usesvg: boolean = false;\n\n  // Valid for 1.x and 2.x\n  @Input() public allowEmptyString: boolean = false;\n  @Input() public qrdata: string = '';\n\n  // New fields introduced in 2.0.0\n  @Input() public colorDark: string = '#000000ff';\n  @Input() public colorLight: string = '#ffffffff';\n  @Input() public cssClass: string = 'qrcode';\n  @Input() public elementType: keyof typeof QRCodeElementType = 'canvas';\n  @Input() public errorCorrectionLevel: keyof typeof QRCodeErrorCorrectionLevel = 'M';\n  @Input() public margin: number = 4;\n  @Input() public scale: number = 4;\n  @Input() public version: QRCodeVersion;\n  @Input() public width: number = 10;\n\n  @ViewChild('qrcElement', { static: true }) public qrcElement: ElementRef;\n\n  public qrcode: any = null;\n\n  constructor(\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private readonly platformId: any,\n  ) {\n    // Deprectation warnings\n    if (this.colordark !== '') {\n      console.warn('[angularx-qrcode] colordark is deprecated, use colorDark.');\n    }\n    if (this.colorlight !== '') {\n      console.warn('[angularx-qrcode] colorlight is deprecated, use colorLight.');\n    }\n    if (this.level !== '') {\n      console.warn('[angularx-qrcode] level is deprecated, use errorCorrectionLevel.');\n    }\n    if (this.hidetitle !== false) {\n      console.warn('[angularx-qrcode] hidetitle is deprecated.');\n    }\n    if (this.size !== 0) {\n      console.warn('[angularx-qrcode] size is deprecated, use `width`. Defaults to 10.');\n    }\n    if (this.usesvg !== false) {\n      console.warn(`[angularx-qrcode] usesvg is deprecated, use [elementType]=\"'img'\".`);\n    }\n  }\n\n  public ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    // if (!QRCode) {\n    //   QRCode = require('qrcode');\n    // }\n    this.createQRCode();\n  }\n\n  public ngOnChanges() {\n    this.createQRCode();\n  }\n\n  protected isValidQrCodeText = (data: string | null): boolean => {\n    if (this.allowEmptyString === false) {\n      return !(typeof data === 'undefined' || data === '' || data === 'null');\n    }\n    return !(typeof data === 'undefined');\n  }\n\n  private toDataURL() {\n    return new Promise((resolve: (arg: any) => any, reject: (arg: any) => any) => {\n      QRCode.toDataURL(this.qrdata,\n        {\n          color: {\n            dark: this.colorDark,\n            light: this.colorLight\n          },\n          errorCorrectionLevel: this.errorCorrectionLevel,\n          margin: this.margin,\n          scale: this.scale,\n          version: this.version,\n          width: this.width,\n        }, (err, url) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(url);\n          }\n        });\n    });\n  }\n\n  private toCanvas(canvas: Element) {\n    return new Promise((resolve: (arg: any) => any, reject: (arg: any) => any) => {\n      QRCode.toCanvas(canvas, this.qrdata, {\n        color: {\n          dark: this.colorDark,\n          light: this.colorLight\n        },\n        errorCorrectionLevel: this.errorCorrectionLevel,\n        margin: this.margin,\n        scale: this.scale,\n        version: this.version,\n        width: this.width,\n      }, (error) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve('success');\n        }\n      });\n    });\n  }\n\n  private renderElement(element: Element) {\n    for (const node of this.qrcElement.nativeElement.childNodes) {\n      this.renderer.removeChild(this.qrcElement.nativeElement, node);\n    }\n    this.renderer.appendChild(this.qrcElement.nativeElement, element);\n  }\n\n  private createQRCode() {\n\n    // Set sensitive defaults\n    if (this.version && this.version > 40) {\n      console.warn('[angularx-qrcode] max value for `version` is 40');\n      this.version = 40;\n    } else if (this.version && this.version < 1) {\n      console.warn('[angularx-qrcode]`min value for `version` is 1');\n      this.version = 1;\n    } else if (this.version !== undefined && isNaN(this.version)) {\n      console.warn('[angularx-qrcode] version should be a number, defaulting to auto');\n      this.version = undefined;\n    }\n\n    try {\n      if (!this.isValidQrCodeText(this.qrdata)) {\n        throw new Error('[angularx-qrcode] Field `qrdata` is empty');\n      }\n\n      let element: Element;\n\n      switch (this.elementType) {\n        case 'canvas':\n          element = this.renderer.createElement('canvas');\n          this.toCanvas(element).then(() => {\n            this.renderElement(element);\n          }).catch((e) => {\n            console.error('[angularx-qrcode] error: ', e);\n          });\n          break;\n        // case 'svg':\n        //   break;\n        case 'url':\n        case 'img':\n        default:\n          element = this.renderer.createElement('img');\n          this.toDataURL().then((dataUrl: string) => {\n            element.setAttribute('src', dataUrl);\n            this.renderElement(element);\n          }).catch((e) => {\n            console.error('[angularx-qrcode] error: ', e);\n          });\n      }\n\n    } catch (e) {\n      console.error('[angularx-qrcode] Error generating QR Code: ', e.message);\n    }\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { QRCodeComponent } from './angularx-qrcode.component';\n\n@NgModule({\n  providers: [],\n  declarations: [\n    QRCodeComponent,\n  ],\n  exports: [\n    QRCodeComponent,\n  ]\n})\nexport class QRCodeModule { }\n","/*\n * Public API Surface of angularx-qrcode\n */\n\nexport { QRCodeComponent } from './lib/angularx-qrcode.component';\nexport { QRCodeModule } from './lib/angularx-qrcode.module';\nexport * from './lib/types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["QRCode.toDataURL","QRCode.toCanvas","tslib_1.__values","tslib_1.__decorate","tslib_1.__param"],"mappings":"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"}